# Generated by Django 2.0.4 on 2018-04-10 22:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('shard', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
            ],
        ),
        migrations.CreateModel(
            name='Telemetry',
            fields=[
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='btcore.Match')),
            ],
        ),
        migrations.AddField(
            model_name='playermatch',
            name='match',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='btcore.Match'),
        ),
        migrations.AddField(
            model_name='playermatch',
            name='player',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='btcore.Player'),
        ),
        migrations.AddField(
            model_name='player',
            name='matches',
            field=models.ManyToManyField(through='btcore.PlayerMatch', to='btcore.Match'),
        ),
        migrations.AddField(
            model_name='match',
            name='players',
            field=models.ManyToManyField(through='btcore.PlayerMatch', to='btcore.Player'),
        ),
    ]
